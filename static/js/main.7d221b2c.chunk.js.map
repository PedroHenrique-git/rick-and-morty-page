{"version":3,"sources":["styles/GlobalStyle.tsx","components/header/style.tsx","images/logo.png","components/header/Header.tsx","components/characterCard/style.tsx","components/characterCard/Character.tsx","components/isLoading/style.tsx","components/isLoading/IsLoading.tsx","pages/index/style.tsx","utils/api.ts","pages/index/Index.tsx","pages/characterpage/style.tsx","components/episodeCard/style.tsx","components/episodeCard/EpisodeCard.tsx","pages/characterpage/Character.tsx","routes/routes.tsx","App.tsx","index.tsx"],"names":["GlobalStyles","createGlobalStyle","HeaderWrapper","styled","header","Header","title","className","to","src","logo","alt","Card","li","Character","id","name","status","species","type","gender","image","IsLoadingContainer","div","IsLoading","msg","MainWrapper","main","ControlButtons","Form","form","axios","create","baseURL","Index","useState","characters","setCharacters","count","prev","next","page","info","setInfo","isLoading","setIsLoading","characterName","setCharacterName","getData","url","a","api","get","response","data","results","toast","error","message","useEffect","onChange","e","target","value","placeholder","onClick","map","character","disabled","MainContent","section","EpisodeInfo","EpisodeCard","air_date","episode","CharacterPage","origin","setCharacter","episodes","setEpisodes","useParams","getCharacterData","forEach","getEpisode","fetch","json","oldArr","dots","infinite","speed","slidesToShow","slidesToScroll","responsive","breakpoint","settings","Routes","exact","path","component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7d221b2c.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyles = createGlobalStyle`\n    * {\n        margin: 0;\n        padding: 0;\n        font-family: 'Source Sans Pro', sans-serif;\n    }\n`;\n","import styled from 'styled-components';\n\nexport const HeaderWrapper = styled.header`\n    background: #020d22;\n    height: 140px;\n    padding: 15px;\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    .container_title_logo {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n\n        img {\n            height: 140px;\n            margin-right: 20px;\n            width: 140px;\n        }\n\n        h1 {\n            color: #fff;\n            font-weight: 100;\n            font-size: 32px;\n\n            @media (max-width: 640px) {\n                font-size: 22px;\n            }\n        }\n    }\n`;\n","export default __webpack_public_path__ + \"static/media/logo.594ec865.png\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { HeaderWrapper } from './style';\nimport logo from '../../images/logo.png';\n\ninterface IHeaderProperty {\n    title: string;\n}\n\nexport default function Header({ title }: IHeaderProperty): JSX.Element {\n    return (\n        <HeaderWrapper>\n            <div className=\"container_title_logo\">\n                <Link to=\"/\">\n                    <img src={logo} alt=\"rick and morty logo\" />\n                </Link>\n                <h1>{title}</h1>\n            </div>\n        </HeaderWrapper>\n    );\n}\n","import styled from 'styled-components';\n\nexport const Card = styled.li`\n    width: 400px;\n    height: 200px;\n    background: #3d3d3d;\n    border-radius: 20px;\n    font-size: 16px;\n    padding: 10px;\n    margin-top: 20px;\n    margin-right: 10px;\n    color: #fff;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    @media (max-width: 640px) {\n        margin-right: 0;\n        width: 100%;\n    }\n\n    .character_photo {\n        margin-right: 20px;\n        img {\n            border-radius: 20px;\n            height: 150px;\n            width: 150px;\n        }\n    }\n\n    .informations_character {\n        a {\n            text-decoration: none;\n            color: #fff;\n        }\n        h1 {\n            color: #fff;\n            font-size: 24px;\n            font-weight: bold;\n\n            @media (max-width: 640px) {\n                font-size: 22px;\n            }\n        }\n        p {\n            font-size: 16px;\n            margin: 10px 0;\n        }\n    }\n`;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card } from './style';\n\ninterface ICharacter {\n    id: number;\n    name: string;\n    status: string;\n    species: string;\n    type: string;\n    gender: string;\n    image: string;\n}\n\nexport default function Character({\n    id,\n    name,\n    status,\n    species,\n    type,\n    gender,\n    image,\n}: ICharacter): JSX.Element {\n    return (\n        <Card key={id}>\n            <div className=\"character_photo\">\n                <img src={image} alt={name} />\n            </div>\n            <div className=\"informations_character\">\n                <Link to={`/character/${id}`}>\n                    <h1>{name}</h1>\n                </Link>\n                <p>{status}</p>\n                <p>{species}</p>\n                <p>{type}</p>\n                <p>{gender}</p>\n            </div>\n        </Card>\n    );\n}\n","import styled from 'styled-components';\n\nexport const IsLoadingContainer = styled.div`\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    right: 0;\n    left: 0;\n    background: RGBA(71, 74, 81, 0.27);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    h1 {\n        font-size: 80px;\n        color: #000;\n    }\n`;\n","import React from 'react';\nimport { IsLoadingContainer } from './style';\n\ninterface IIsLoadind {\n    msg: string;\n}\n\nexport default function IsLoading({ msg }: IIsLoadind): JSX.Element {\n    return (\n        <IsLoadingContainer>\n            <h1>{msg}</h1>\n        </IsLoadingContainer>\n    );\n}\n","import styled from 'styled-components';\n\nexport const MainWrapper = styled.main`\n    margin: 25px auto;\n    padding: 20px;\n    max-width: 1720px;\n\n    .container_cads {\n        display: flex;\n        flex-wrap: wrap;\n        align-items: center;\n        justify-content: center;\n    }\n`;\n\nexport const ControlButtons = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-bottom: 50px;\n\n    @media (max-width: 640px) {\n        gap: 10px;\n    }\n\n    button {\n        background: #87d5b8;\n        outline: none;\n        border: none;\n        border-radius: 10px;\n        padding: 10px;\n        font-size: 24px;\n        margin-left: 10px;\n        cursor: pointer;\n        width: 170px;\n\n        @media (max-width: 640px) {\n            margin: 0;\n            width: 150px;\n        }\n    }\n`;\n\nexport const Form = styled.form`\n    display: flex;\n    justify-content: center;\n    margin: 30px;\n\n    @media (max-width: 640px) {\n        flex-direction: column;\n        gap: 10px;\n        align-items: center;\n    }\n\n    input {\n        border: 1px solid gray;\n        outline: none;\n        height: 25px;\n        width: 280px;\n        border-radius: 10px;\n        padding: 10px;\n        font-size: 18px;\n    }\n\n    button {\n        background: #87d5b8;\n        outline: none;\n        border: none;\n        border-radius: 10px;\n        padding: 10px;\n        font-size: 18px;\n        margin-left: 10px;\n        cursor: pointer;\n\n        @media (max-width: 640px) {\n            margin: 0px;\n            width: 280px;\n        }\n    }\n`;\n","import axios from 'axios';\n\nexport default axios.create({ baseURL: 'https://rickandmortyapi.com/api' });\n","import React, { useEffect, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport Header from '../../components/header/Header';\nimport Character from '../../components/characterCard/Character';\nimport IsLoading from '../../components/isLoading/IsLoading';\nimport { MainWrapper, ControlButtons, Form } from './style';\nimport api from '../../utils/api';\n\ninterface IData {\n    info: {\n        count: string;\n        page: string;\n        next: string;\n        prev: string;\n    };\n    results: Array<{\n        id: number;\n        name: string;\n        status: string;\n        type: string;\n        gender: string;\n        image: string;\n        species: string;\n    }>;\n}\n\ninterface ICharacters {\n    id: number;\n    name: string;\n    status: string;\n    type: string;\n    gender: string;\n    image: string;\n    species: string;\n}\n\ninterface IInfo {\n    count: string;\n    page: string;\n    next: string;\n    prev: string;\n}\n\nexport default function Index(): JSX.Element {\n    const [characters, setCharacters] = useState<Array<ICharacters>>([]);\n    const [info, setInfo] = useState<IInfo>({\n        count: '',\n        prev: '',\n        next: '',\n        page: '',\n    });\n    const [isLoading, setIsLoading] = useState(true);\n    const [characterName, setCharacterName] = useState('');\n\n    const getData = async (url: string | undefined) => {\n        try {\n            if (typeof url === 'string') {\n                setIsLoading(false);\n                const response = await api.get<IData>(url);\n                const data = await response.data;\n                setCharacters(data.results);\n                setInfo(data.info);\n                setIsLoading(true);\n            }\n        } catch (e) {\n            toast.error(e.message);\n            setIsLoading(true);\n        }\n    };\n\n    useEffect(() => {\n        getData('/character/?page=1');\n    }, []);\n\n    if (!isLoading) {\n        return <IsLoading msg=\"Loading...\" />;\n    }\n\n    return (\n        <>\n            <Header title=\"Rick and Morty SPA\" />\n            <Form>\n                <input\n                    onChange={(e) => setCharacterName(e.target.value)}\n                    type=\"text\"\n                    placeholder=\"character name\"\n                />\n                <button\n                    onClick={() => getData(`/character/?name=${characterName}`)}\n                    type=\"button\"\n                >\n                    Search character\n                </button>\n            </Form>\n            <MainWrapper>\n                <ul className=\"container_cads\">\n                    {characters.map((character) => (\n                        <Character\n                            id={character.id}\n                            name={character.name}\n                            gender={character.gender}\n                            species={character.species}\n                            status={character.status}\n                            type={character.type}\n                            image={character.image}\n                        />\n                    ))}\n                </ul>\n            </MainWrapper>\n            <ControlButtons>\n                <button\n                    type=\"button\"\n                    onClick={() => getData(info?.next)}\n                    disabled={!info.next}\n                >\n                    Next\n                </button>\n                <button\n                    type=\"button\"\n                    onClick={() => getData(info?.prev)}\n                    disabled={!info.prev}\n                >\n                    Prev\n                </button>\n            </ControlButtons>\n        </>\n    );\n}\n","import styled from 'styled-components';\n\nexport const MainContent = styled.section`\n    background-image: linear-gradient(\n        to right bottom,\n        #1f202f,\n        #1b1f2f,\n        #171e2e,\n        #121d2e,\n        #0c1c2d\n    );\n    border-radius: 20px;\n    margin: 50px auto;\n    max-width: 1200px;\n    padding: 20px;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n\n    @media (max-width: 1240px) {\n        margin: 50px 20px;\n    }\n\n    .image {\n        margin-right: 30px;\n\n        @media (max-width: 640px) {\n            margin: 0;\n        }\n\n        img {\n            border-radius: 20px;\n        }\n    }\n\n    .title_episodes {\n        color: #f5f2f6;\n        margin-bottom: 30px;\n        text-align: center;\n        font-weight: 100;\n        text-transform: uppercase;\n    }\n\n    .character_informations {\n        margin-bottom: 50px;\n\n        display: flex;\n        align-items: center;\n\n        @media (max-width: 640px) {\n            flex-direction: column;\n            gap: 20px;\n        }\n\n        .others_informations {\n            h1 {\n                color: #f5f2f6;\n                font-size: 32px;\n                font-weight: 100;\n                text-transform: uppercase;\n            }\n            p {\n                color: #f5f2f6;\n                margin: 15px 0;\n                font-size: 20px;\n                font-weight: 100;\n\n                @media (max-width: 640px) {\n                    margin: 10px 0;\n                }\n            }\n        }\n    }\n\n    .episodes_informations {\n        width: 80%;\n    }\n`;\n","import styled from 'styled-components';\n\nexport const EpisodeInfo = styled.div`\n    height: 100px;\n    list-style: none;\n    text-align: center;\n    color: #f5f2f6;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\n","import React from 'react';\nimport { EpisodeInfo } from './style';\n\ninterface IEpisode {\n    name: string;\n    air_date: string;\n    episode: string;\n}\n\nexport default function EpisodeCard({\n    name,\n    air_date,\n    episode,\n}: IEpisode): JSX.Element {\n    return (\n        <EpisodeInfo key={name}>\n            <p>{name}</p>\n            <p>{air_date}</p>\n            <p>{episode}</p>\n        </EpisodeInfo>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport Slider from 'react-slick';\nimport Header from '../../components/header/Header';\nimport api from '../../utils/api';\nimport { MainContent } from './style';\nimport IsLoading from '../../components/isLoading/IsLoading';\nimport EpisodeCard from '../../components/episodeCard/EpisodeCard';\n\ninterface IParam {\n    id?: string;\n}\n\ninterface ICharacters {\n    name: string;\n    image: string;\n    species: string;\n    origin: {\n        name: string;\n    };\n    status: string;\n    gender: string;\n    episode: Array<string>;\n}\n\ninterface IEpisode {\n    name: string;\n    air_date: string;\n    episode: string;\n}\n\ninterface SliderProps {\n    dots: boolean;\n    infinite: true;\n    speed: number;\n    slidesToShow: number;\n    slidesToScroll: number;\n    responsive: Array<{\n        breakpoint: number;\n        settings: {\n            slidesToShow: number;\n            slidesToScroll: number;\n            dots: boolean;\n        };\n    }>;\n}\n\nexport default function CharacterPage(): JSX.Element {\n    const [character, setCharacter] = useState<ICharacters>({\n        episode: [],\n        gender: '',\n        image: '',\n        name: '',\n        origin: { name: '' },\n        species: '',\n        status: '',\n    });\n    const settings: SliderProps = {\n        dots: false,\n        infinite: true,\n        speed: 500,\n        slidesToShow: 5,\n        slidesToScroll: 5,\n        responsive: [\n            {\n                breakpoint: 640,\n                settings: {\n                    slidesToShow: 1,\n                    slidesToScroll: 1,\n                    dots: false,\n                },\n            },\n        ],\n    };\n    const [isLoading, setIsLoading] = useState(true);\n    const [episodes, setEpisodes] = useState<IEpisode[]>([]);\n    const { id } = useParams<IParam>();\n\n    const getCharacterData = async () => {\n        try {\n            setIsLoading(false);\n            const response = await api.get<ICharacters>(`/character/${id}`);\n            const data = await response.data;\n            setCharacter(data);\n            data.episode.forEach((url) => getEpisode(url));\n            setIsLoading(true);\n        } catch (e) {\n            toast.error(e.message);\n            setIsLoading(true);\n        }\n    };\n\n    const getEpisode = async (url: string) => {\n        try {\n            setIsLoading(false);\n            const response = await fetch(url);\n            const data: IEpisode = await response.json();\n            setEpisodes((oldArr) => [...oldArr, data]);\n            setIsLoading(true);\n        } catch (e) {\n            toast.error(e.message);\n            setIsLoading(true);\n        }\n    };\n\n    useEffect(() => {\n        getCharacterData();\n    }, []);\n\n    if (!isLoading) {\n        return <IsLoading msg=\"Loading...\" />;\n    }\n\n    return (\n        <>\n            <Header title=\"Rick and Morty SPA\" />\n            <MainContent>\n                <div className=\"character_informations\">\n                    <div className=\"image\">\n                        <img src={character.image} alt={character.name} />\n                    </div>\n                    <div className=\"others_informations\">\n                        <h1>{character.name}</h1>\n                        <p>{character.origin.name}</p>\n                        <p>{character.species}</p>\n                        <p>{character.status}</p>\n                        <p>{character.gender}</p>\n                    </div>\n                </div>\n                {/* <h1 className=\"title_episodes\">Character episode list</h1> */}\n                <div className=\"episodes_informations\">\n                    <h1 className=\"title_episodes\">Character episode list</h1>\n                    <Slider {...settings}>\n                        {episodes.map((episode) => (\n                            <EpisodeCard\n                                air_date={episode.air_date}\n                                name={episode.name}\n                                episode={episode.episode}\n                            />\n                        ))}\n                    </Slider>\n                </div>\n            </MainContent>\n        </>\n    );\n}\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Index from '../pages/index/Index';\nimport CharacterPage from '../pages/characterpage/Character';\n\nexport default function Routes(): JSX.Element {\n    return (\n        <Switch>\n            <Route exact path=\"/\" component={Index} />\n            <Route exact path=\"/character/:id\" component={CharacterPage} />\n            <Route exact path=\"*\" component={Index} />\n        </Switch>\n    );\n}\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport { GlobalStyles } from './styles/GlobalStyle';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport Routes from './routes/routes';\n\nfunction App(): JSX.Element {\n    return (\n        <BrowserRouter>\n            <ToastContainer />\n            <GlobalStyles />\n            <Routes />\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}